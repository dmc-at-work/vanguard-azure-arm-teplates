{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "vnetName": {
          "type": "string"
      },
      "location": {
          "type": "string"
      },
      "addressPrefix": {
          "type": "string"
      },
      "subnetNameA": {
          "type": "string"
      },
      "subnetAddressPrefixA": {
          "type": "string"
      },
      "subnetNameB": {
          "type": "string"
      },
      "subnetAddressPrefixB": {
          "type": "string"
      },
      "subnetNameC": {
          "type": "string"
      },
      "subnetAddressPrefixC": {
          "type": "string"
      },
      "subnetNameD": {
          "type": "string"
      },
      "subnetAddressPrefixD": {
          "type": "string"
      },
      "enableDdosProtection": {
          "type": "bool"
      },


      "networkInterfaceNameA": {
          "type": "string"
      },
      "publicIpAddressNameA": {
          "type": "string"
      },
      "networkSecurityGroupNameA": {
          "type": "string"
      },
      "dnsLabelPrefixA": {
        "type": "string",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },


      "virtualMachineNameA": {
          "type": "string"
      },
      "osDiskTypeA": {
          "type": "string"
      },
      "virtualMachineSizeA": {
          "type": "string"
      },
      "adminUsernameA": {
          "type": "string"
      },
      "adminPublicKeyA": {
          "type": "secureString"
      },


      "diagnosticsStorageAccountName": {
          "type": "string"
      },
      "diagnosticsStorageAccountId": {
          "type": "string"
      },
      "diagnosticsStorageAccountType": {
          "type": "string"
      },
      "diagnosticsStorageAccountKind": {
          "type": "string"
      }
  },
  "variables": {
      "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameA'))]",
      "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
      "subnetRefA": "[concat(variables('vnetId'), '/subnets/', parameters('subnetNameA'))]",
      "networkSecurityGroupRules": [
              {
                  "name": "SSH",
                  "properties": {
                      "priority": 300,
                      "protocol": "TCP",
                      "access": "Allow",
                      "direction": "Inbound",
                      "sourceAddressPrefix": "*",
                      "sourcePortRange": "*",
                      "destinationAddressPrefix": "*",
                      "destinationPortRange": "22"
                  }
              }
          ]
  },
  "resources": [
      {
          "apiVersion": "2019-04-01",
          "name": "[parameters('vnetName')]",
          "type": "Microsoft.Network/virtualNetworks",
          "location": "[parameters('location')]",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "[parameters('addressPrefix')]"
                  ]
              },
              "subnets": [
                  {
                      "name": "[parameters('subnetNameA')]",
                      "properties": {
                          "addressPrefix": "[parameters('subnetAddressPrefixA')]",
                          "addressPrefixes": []
                      }
                  },
                  {
                      "name": "[parameters('subnetNameB')]",
                      "properties": {
                          "addressPrefix": "[parameters('subnetAddressPrefixB')]",
                          "addressPrefixes": []
                      }
                  },
                  {
                      "name": "[parameters('subnetNameC')]",
                      "properties": {
                          "addressPrefix": "[parameters('subnetAddressPrefixC')]",
                          "addressPrefixes": []
                      }
                  },
                  {
                      "name": "[parameters('subnetNameD')]",
                      "properties": {
                          "addressPrefix": "[parameters('subnetAddressPrefixD')]",
                          "addressPrefixes": []
                      }
                  }
              ],
              "enableDdosProtection": "[parameters('enableDdosProtection')]"
          }
      }
      ,
      {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Network/networkSecurityGroups",
          "name": "[parameters('networkSecurityGroupNameA')]",
          "location": "[parameters('location')]",
          "properties": 
          {
              "securityRules": "[variables('networkSecurityGroupRules')]"
          }
      },
      {
          "name": "[parameters('networkInterfaceNameA')]",
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameA'))]",
              "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
              "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressNameA'))]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "ipconfig1",
                      "properties": {
                          "subnet": {
                              "id": "[variables('subnetRefA')]"
                          },
                          "privateIPAllocationMethod": "Dynamic",
                          "publicIpAddress": {
                              "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressNameA'))]"
                          }
                      }
                  }
              ],
              "networkSecurityGroup": {
                  "id": "[variables('nsgId')]"
              }
          }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2018-11-01",
        "name": "[parameters('publicIPAddressNameA')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefixA')]"
          }
        }
      },
      {
          "name": "[parameters('diagnosticsStorageAccountName')]",
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2018-07-01",
          "location": "[parameters('location')]",
          "properties": {},
          "kind": "[parameters('diagnosticsStorageAccountKind')]",
          "sku": {
              "name": "[parameters('diagnosticsStorageAccountType')]"
          }
      },
      {
          "name": "[parameters('virtualMachineNameA')]",
          "type": "Microsoft.Compute/virtualMachines",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameA'))]",
              "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
          ],
          "properties": {
              "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachineSizeA')]"
              },
              "storageProfile": {
                  "osDisk": {
                      "createOption": "fromImage",
                      "managedDisk": {
                          "storageAccountType": "[parameters('osDiskTypeA')]"
                      }
                  },
                  "imageReference": {
                      "publisher": "Canonical",
                      "offer": "UbuntuServer",
                      "sku": "18.04-LTS",
                      "version": "latest"
                  }
              },
              "networkProfile": {
                  "networkInterfaces": [
                      {
                          "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameA'))]"
                      }
                  ]
              },
              "osProfile": {
                  "computerName": "[parameters('virtualMachineNameA')]",
                  "adminUsername": "[parameters('adminUsernameA')]",
                  "linuxConfiguration": {
                  "disablePasswordAuthentication": true,
                  "ssh": {
                    "publicKeys": [
                      {
                        "path": "[concat('/home/', parameters('adminUsernameA'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPublicKeyA')]"
                      }
                    ]
                  }
                }
              },
              "diagnosticsProfile": {
                  "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
                  }
              }
          }
      }
  ]
}
